{"version":3,"sources":["components/About.js","components/Experience.js","components/Projects.js","App.js","reportWebVitals.js","index.js"],"names":["About","React","createElement","className","src","alt","href","target","rel","role","aria-label","Experience","experiences","company","title","dates","description","activeIndex","setActiveIndex","useState","map","exp","index","key","onClick","desc","i","Projects","projects","name","image","link","url","text","proj","line","App","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.ea3dd2b9.chunk.js","sourcesContent":["import React from 'react';\n\nfunction About() {\n  return (\n    <section className=\"about-section\">\n      <div className=\"about-container\">\n        <div className=\"about-image-section\">\n    <img src=\"/aadhya.jpg\" alt=\"Aadhya\" className=\"about-image\" />\n    <div className=\"social-links\">\n      <a href=\"https://www.linkedin.com/in/aadhya-n-a87a96268/\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <img src=\"/linkedin.png\" alt=\"LinkedIn\" />\n      </a>\n      <a href=\"https://github.com/aadhyanav/\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <img src=\"https://cdn.jsdelivr.net/gh/devicons/devicon/icons/github/github-original.svg\" alt=\"GitHub\" />\n      </a>\n        </div>\n      </div>\n      <div className=\"about-text\">\n        <h1>Hi, I'm <strong>Aadhya!</strong></h1>\n        <p> My interest in data science and technology began during my time at UCSD, where I initially planned to pursue pre-med. \n        However, I soon discovered the limitless ways in which data and technology can be used to solve real-world problems and make \n        a meaningful impact on people‚Äôs lives. </p> \n\n        <p> Currently, I've been working at SoCalGas as a Business Analyst for almost a year, and then prior to that a \n        undergraduate research assistant at UCSD's Economics Lab. In my free time, I like to hike, dance, read, and explore new places! \n        I'm continuously learning! :)\n        </p>\n      </div>\n      </div>\n      <div className=\"skills-container\">\n      <div className=\"skills-box\">\n        <h2>Languages & Tools <span role=\"img\" aria-label=\"computer\">üíª</span></h2>\n        <ul className=\"skills-list-bullets\">\n          <li>Python (Pandas, Numpy, Sklearn, Pytorch)</li>\n          <li>SQL</li>\n          <li>JavaScript (Svelte, React) </li>\n          <li>HTML/CSS</li>\n          <li>R programming</li>\n        </ul>\n      </div>\n\n      <div className=\"skills-box2\">\n        <h2>Relevant Coursework <span role=\"img\" aria-label=\"book\">üìö</span></h2>\n        <ul className=\"skills-list-bullets2\">\n          <li>Data Structures & Algorithms </li>\n          <li>Data Visualization </li>\n          <li>Econometrics & Statistics </li>\n          <li>Probabilistic Modeling and Machine Learning</li>\n          <li>Linear Algebra </li>\n        </ul>\n      </div>\n      </div>\n    </section>\n  );\n}\n\nexport default About;","import React, { useState } from 'react';\n\nconst Experience = () => {\n  const experiences = [\n    {\n      company: 'SoCalGas',\n      title: 'IT Business Analyst (Contract)',\n      dates: 'Jul 2024 ‚Äì Present, Downtown Los Angeles (Hybrid)',\n      description: [\n        'Automated financial reporting by integrating SharePoint and TM1 forecast data with Python (Pandas), generating Excel reports. Reduced manual work by 80% and delivered weekly-to-annual insights on trends, cash flow, and spending.',\n        'Created Excel reports with formulas, pivot tables, and data validation to track application architecture (e.g., active-active servers, cloud setups), and compiled findings into quarterly metrics for directors.',\n        'Led meetings with support teams and stakeholders to gather key documents (e.g., Recovery Scripts, Architecture Diagrams) and coordinated off-shore approvals for Disaster Recovery testing.',\n        'Collaborated closely with Business and Technical Project Managers to gather project scope and timeline details for the development of comprehensive Business Requirements documentation.'\n      ]\n    },\n    {\n      company: 'UCSD Economics Lab',\n      title: 'Research Assistant',\n      dates: 'Sep 2022 ‚Äì Jun 2024, San Diego',\n      description: [\n        'Developed a large-scale data collection pipeline using Python (BeautifulSoup, Requests, Pandas) to scrape and structure NGO data across African regions for economic impact analysis.',\n        'Designed a Python script for optical character recognition (OCR), extracting text from historical images, applying advanced string manipulation and APIs for language translation from French to English to improve accuracy and readability.',\n        'Summarized findings from over 80+ documents for a comprehensive literature review on state-level responses to the closure of religious places of worship across all 50 U.S. states during the COVID-19 pandemic.',\n        'Created various visualizations using Matplotlib and Seaborn in Python after transforming and cleaning datasets of raw data collected for household bargaining in India. '\n      ]\n    }\n  ];\n\n  const [activeIndex, setActiveIndex] = useState(0);\n\n  return (\n    <section className=\"experience-section\">\n      <h1>Experience</h1>\n      <div className=\"experience-layout\">\n        <div className=\"company-buttons\">\n          {experiences.map((exp, index) => (\n            <button\n              key={index}\n              className={`company-button ${activeIndex === index ? 'active' : ''}`}\n              onClick={() => setActiveIndex(index)}\n            >\n              {exp.company}\n            </button>\n          ))}\n        </div>\n\n        <div className=\"experience-details\">\n          <h2>{experiences[activeIndex].title} at {experiences[activeIndex].company}</h2>\n          <p>{experiences[activeIndex].dates}</p>\n          <ul className=\"experience-list\">\n            {experiences[activeIndex].description.map((desc, i) => (\n              <li key={i}>{desc}</li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Experience;\n","import React, { useState } from 'react';\n\nconst Projects = () => {\n  const projects = [\n    {\n      name: 'Cat Persona Quiz',\n      image: '/Cat.png',\n      description: [\n        'Created an interactive full-stack web application using JavaScript, HTML, and CSS, engaging users with a dynamic personality quiz that returns a user‚Äôs ‚Äúcat persona‚Äù after a series of questions.',\n        'Focused on user-centric design, incorporating intuitive UI/UX, attractive layouts, and accessibility features.',\n        'Implemented Git for version control and shared code repository, ensuring seamless collaboration and iterative development.'\n      ],\n      link: {\n        url: 'https://aadhyanav.github.io/CatWonderland/',\n        text: 'Take the Quiz Here!'\n      }\n    },\n    {\n      name: 'Recipe Prediction Model',\n      image: '/Recipe.png',\n      description: [\n        'Built a predictive ML pipeline in Python (scikit-learn, Pandas) using a RandomForestClassifier to classify recipe ratings (1-5) based on key features, achieving a 78% F1-score.',\n        'Engineered features using one-hot encoding, dataset merging, and normalization, optimizing for model performance.',\n        'Applied hyperparameter tuning using grid search cross-validation to increase model accuracy and improve train-test generalization.'\n      ],\n      link: {\n        url: 'https://aadhyanav.github.io/Recipe_Ratings/',\n        text: 'Link: Recipe Ratings ML Model'\n      }\n    },\n    {\n      name: 'San Diego Air Traffic Visualization',\n      image: '/SDAir.png',\n      description: [\n        'Led the collaborative development of a JavaScript interactive visualization using d3.js and Svelte, highlighting trends in air traffic at the San Diego International Airport.',\n        'Analyzed passenger data and found that travelers are three times more likely to fly domestically than internationally, emphasizing San Diego Airport‚Äôs prominence as a domestic connecting hub over an international hub.',\n        'Designed intuitive features including customizable buttons, sliders, hover-over functionality, and clickable maps, enhancing user exploration and understanding of the data.'\n      ],\n      link: {\n        url: 'https://antoinecarre1.github.io/Final-Project/',\n        text: 'Link: SD Air Space Interative Visualization'\n      }\n    },\n    {\n        name: 'India Safety Index & Crime Analysis (In progress)',\n        image: '/India.png',\n        description: [\n          'Conducted exploratory data analysis on crime data in India using Python packages Seaborn and Matplotlib to visualize victim demographics across regions.',\n          'Developed a predictive model to generate a city-based safety index from 1-5, using ML techniques for risk assessment.'\n        ],\n        link: {\n            url: 'https://github.com/aadhyanav/india_crimes_analysis/blob/main/india_crimes.ipynb',\n            text: 'Link: India Crimes Notebook'\n          }\n      }\n  ];\n\n  const [activeIndex, setActiveIndex] = useState(0);\n\n  return (\n    <section className=\"projects-section\">\n      <h1>Projects</h1>\n      <img\n        src={projects[activeIndex].image}\n        alt={`${projects[activeIndex].name} preview`}\n        className=\"project-image\"\n      />\n      <div className=\"projects-layout\">\n        <div className=\"project-buttons\">\n          {projects.map((proj, index) => (\n            <button\n              key={index}\n              className={`project-button ${activeIndex === index ? 'active' : ''}`}\n              onClick={() => setActiveIndex(index)}\n            >\n              {proj.name}\n            </button>\n          ))}\n        </div>\n\n        <div className=\"project-details\">\n          <h2>{projects[activeIndex].name}</h2>\n          <ul className=\"project-list\">\n            {projects[activeIndex].description.map((line, i) => (\n              <li key={i}>{line}</li>\n            ))}\n          </ul>\n            {projects[activeIndex].link && (\n            <a\n            href={projects[activeIndex].link.url}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className=\"project-link\"\n    >\n      {projects[activeIndex].link.text}\n    </a>\n  )}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Projects;\n","import React from 'react';\nimport './App.css';\nimport About from './components/About';\nimport Experience from './components/Experience';\nimport Projects from './components/Projects';\n\n\nfunction App() {\n  return (\n    <div>\n      <About />\n      <Experience />\n      <Projects /> \n    </div>\n  );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}